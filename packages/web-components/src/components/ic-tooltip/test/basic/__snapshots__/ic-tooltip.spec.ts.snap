// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ic-tooltip component getTooltipTranslate should update for bottom 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -100px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for bottom-end 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="bottom-end" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: -40px; --tooltip-translate-y: -100px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for bottom-start 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="bottom-start" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -100px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for left 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="left" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: -40px; --tooltip-translate-y: -100px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for left-end 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="left-end" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: -40px; --tooltip-translate-y: -132px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for right 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="right" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -100px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for right-end 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="right-end" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -132px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for top 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="top" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -132px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for top-end 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="top-end" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: -40px; --tooltip-translate-y: -132px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update for top-start 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="top-start" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -132px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component getTooltipTranslate should update when tooltip is outside of dialog 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip" placement="left" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip" style="--tooltip-translate-x: 0px; --tooltip-translate-y: -100px;">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;

exports[`ic-tooltip component should render an icon next to the label text and hide it from screen readers when no alt text is given 1`] = `
<ic-tooltip class="ic-tooltip" label="This is a tooltip with an icon and quite a large label to to show the icon aligns with the first line of text." target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container ic-tooltip-container-with-icon" role="tooltip">
      <div aria-hidden="true" class="icon-container" role="img">
        <slot aria-hidden="true" name="icon"></slot>
      </div>
      <ic-typography class="ic-typography-caption">
        <mock:shadow-root>
          <slot></slot>
        </mock:shadow-root>
        This is a tooltip with an icon and quite a large label to to show the icon aligns with the first line of text.
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
  <svg fill="#000000" height="24px" slot="icon" viewBox="0 0 24 24" width="24px" xmlns="http://www.w3.org/2000/svg">
    <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path>
  </svg>
</ic-tooltip>
`;

exports[`ic-tooltip component should render an icon next to the label text and show it to screen readers when alt text is given 1`] = `
<ic-tooltip class="ic-tooltip" icon-alt-text="an icon" label="This is a tooltip with an icon and quite a large label to to show the icon aligns with the first line of text." target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container ic-tooltip-container-with-icon" role="tooltip">
      <div aria-hidden="false" aria-label="an icon" class="icon-container" role="img">
        <slot aria-hidden="true" name="icon"></slot>
      </div>
      <ic-typography class="ic-typography-caption">
        <mock:shadow-root>
          <slot></slot>
        </mock:shadow-root>
        This is a tooltip with an icon and quite a large label to to show the icon aligns with the first line of text.
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
  <svg fill="#000000" height="24px" slot="icon" viewBox="0 0 24 24" width="24px" xmlns="http://www.w3.org/2000/svg">
    <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path>
  </svg>
</ic-tooltip>
`;

exports[`ic-tooltip component should render: ic-tooltip-render 1`] = `
<ic-tooltip class="ic-tooltip" label="tooltip">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip">
      <ic-typography variant="caption">
        tooltip
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
</ic-tooltip>
`;

exports[`ic-tooltip component should truncate text and pass the maxLines value to ic-typography if maxLines prop has been set 1`] = `
<ic-tooltip class="ic-tooltip" label="This is a body of text that is truncated to three lines within a tooltip. It has been truncated based on the max-lines property. The number of lines in the text is clamped to the number passed through the max-lines property." max-lines="2" target="test-button">
  <mock:shadow-root>
    <div aria-hidden="false" class="ic-tooltip-container" role="tooltip">
      <ic-typography class="ic-typography-caption" style="--truncation-max-lines: 2;">
        <mock:shadow-root>
          <div class="trunc-wrapper">
            <slot></slot>
          </div>
        </mock:shadow-root>
        This is a body of text that is truncated to three lines within a tooltip. It has been truncated based on the max-lines property. The number of lines in the text is clamped to the number passed through the max-lines property.
        <span style="visibility: hidden;"></span>
      </ic-typography>
      <div class="ic-tooltip-arrow"></div>
    </div>
    <slot></slot>
  </mock:shadow-root>
  <button id="test-button">
    Click
  </button>
</ic-tooltip>
`;
